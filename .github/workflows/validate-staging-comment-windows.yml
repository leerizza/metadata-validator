name: Validate → Deploy STAGING → Comment PR (Windows Self-Hosted)

on:
  pull_request:
    paths:
      - "tables/**/*.yml"
      - "tables/**/*.yaml"
      - "deploy/**/*.sql"
      - "rules.yml"
      - "validate_sql.py"
      - "scripts/metadata_validate_and_render.py"
      - ".github/workflows/validate-staging-comment-windows.yml"

defaults:
  run:
    shell: cmd

jobs:
  validate:
    runs-on: [self-hosted, Windows]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      # (opsional) jalankan validator SQL lama kamu jika masih mau dipakai
      - name: Run legacy validator (optional)
        continue-on-error: true
        run: >
          python validate_sql.py --junit report.xml

      # ======== BARU: Validasi metadata & generate SQL ke deploy/ ========
      - name: Generate CREATE TABLE from metadata (PoC)
        run: >
          python scripts/metadata_validate_and_render.py tables deploy

      - name: Upload generated SQL
        uses: actions/upload-artifact@v4
        with:
          name: generated-sql
          path: deploy/*.sql

  deploy_staging:
    needs: validate
    runs-on: [self-hosted, Windows]
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Use sqlcmd path from repo variable
        run: |
          echo SQLCMD_EXE=${{ vars.SQLCMD_EXE }}>>%GITHUB_ENV%
          if not exist "${{ vars.SQLCMD_EXE }}" (
            echo sqlcmd.exe not found at: ${{ vars.SQLCMD_EXE }}
            exit /b 1
          )
          echo Using sqlcmd: %SQLCMD_EXE%

      - name: Deploy to STAGING (dwdb-sol / DQ_DEV)
        env:
          H: ${{ secrets.STG_DB_HOST }}   # dwdb-sol
          P: ${{ secrets.STG_DB_PORT }}   # 1433
          D: ${{ secrets.STG_DB_NAME }}   # DQ_DEV
          U: ${{ secrets.STG_DB_USER }}
          W: ${{ secrets.STG_DB_PASSWORD }}
        run: |
          set "PORT=%P%"
          if "%PORT%"=="" set "PORT=1433"
          for %%F in (deploy\*.sql) do (
            echo Executing %%~nxF ...
            "%SQLCMD_EXE%" -S %H%,%PORT% -d %D% -U %U% -P %W% -b -C -i "%%F"
            if errorlevel 1 (
              echo FAILED on %%~nxF
              exit /b 1
            )
          )

      - name: Comment on PR (summary)
        uses: actions/github-script@v7
        with:
          script: |
            const body = [
              "### ✅ Metadata validated & tables deployed to **DQ_DEV**",
              "- Workflow: " + process.env.GITHUB_WORKFLOW,
              "- Target: `" + process.env.STG_DB_HOST + "` / `" + process.env.STG_DB_NAME + "`",
              "",
              "Artifacts: **generated-sql** (lihat tab Artifacts)."
            ].join("\n");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
