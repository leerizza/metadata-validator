name: Probe STAGING SQL Server (Windows Self-Hosted)

on:
  workflow_dispatch:
    inputs:
      use_integrated:
        description: "Gunakan Windows Integrated Auth (true/false)"
        required: false
        default: "false"

defaults:
  run:
    shell: cmd

jobs:
  probe:
    runs-on: [self-hosted, Windows]
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use sqlcmd path from variable
        run: |
          echo SQLCMD_EXE=${{ vars.SQLCMD_EXE }}>>%GITHUB_ENV%
          if not exist "${{ vars.SQLCMD_EXE }}" (
            echo sqlcmd.exe not found at: ${{ vars.SQLCMD_EXE }}
            exit /b 1
          )
          echo Using sqlcmd from: ${{ vars.SQLCMD_EXE }}

      - name: DNS resolve
        env:
          H: ${{ secrets.STG_DB_HOST }}
        run: |
          echo Resolving %H% ...
          nslookup %H% || (echo DNS FAILED & exit /b 1)

      - name: TCP port check
        env:
          H: ${{ secrets.STG_DB_HOST }}
          P: ${{ secrets.STG_DB_PORT }}
        run: |
          set "PORT=%P%"
          if "%PORT%"=="" set "PORT=1433"
          echo Checking TCP connection to %H%:%PORT% ...
          powershell -Command "if(!(Test-NetConnection -ComputerName '%H%' -Port ([int]'%PORT%') -InformationLevel Quiet)){exit 1}"

      - name: Try sqlcmd login (SELECT 1)
        env:
          H: ${{ secrets.STG_DB_HOST }}
          P: ${{ secrets.STG_DB_PORT }}
          D: ${{ secrets.STG_DB_NAME }}
          U: ${{ secrets.STG_DB_USER }}
          W: ${{ secrets.STG_DB_PASSWORD }}
        run: |
          set "PORT=%P%"
          if "%PORT%"=="" set "PORT=1433"

          echo Testing SQLCMD connection to %H%,%PORT%...
          "%SQLCMD_EXE%" -S %H%,%PORT% -U %U% -P %W% -d %D% -Q "SELECT 1 AS ok, DB_NAME() AS db, SYSTEM_USER AS login;"
          if errorlevel 1 (
            echo ❌ SQLCMD login failed
            exit /b 1
          )
          echo ✅ SQLCMD connection OK
